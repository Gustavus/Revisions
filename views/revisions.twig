{% extends 'base.twig' %}
{% import 'base.twig' as base %}

{% block revisionTimeline %}
  {% if shouldRenderTimeline %}
    {{ _self.renderTimeline(revisions, maxColumnSizes, [], oldestRevisionNumber, limit) }}
  {% endif %}
{% endblock %}

{% block formExtras %}
{% endblock %}

{% macro renderTimeline(revisions, maxColumnSizes, visibleRevisions, oldestRevisionNumber, limit) %}
  {% import 'base.twig' as base %}
  {% set columns = revisions[revisions|length - 1].getRevisionData()|keys %}
  <div id="revisionTimeline">
    <div class="labels">
      {% for column in columns %}
        <div>{{ column }}</div>
      {% endfor %}
      <div><button id="compareButton" class="positive" name="revisionNumber" value="false">Compare</button></div>
    </div>
    <div class="viewport">
      <table class="fancy">
        <thead>
          <tr>
            <th>
              {#{% if oldestRevisionNumber > 0 %}
                {% if oldestRevisionNumber - limit + 1 < 0 %}{% set oldestRevNum = 1 %}{% else %}{% set oldestRevNum = oldestRevisionNumber - limit + 1 %}{% endif %}
                <button id="showMoreRevisions" name="oldestRevisionNumber" value="{{ oldestRevNum }}" class="small" title="Show Revision {{ oldestRevNum }} in table">Show More Revisions</button>
              {% else %}#}
              &nbsp;
              {#{% endif %}#}
            </th>
            {% for revisionNumber, revision in revisions %}
              {% if revisionNumber != 0 %}
                <th class="{{ revisionNumber }}{% if revisionNumber in visibleRevisions %} {% if visibleRevisions|length > 1 and revisionNumber == visibleRevisions[1] or visibleRevisions|length == 1 and revisionNumber == visibleRevisions[0] %}young{% else %}old{% endif %}{% endif %}" title="{{ base.renderTitle(revision, revisionNumber, oldestRevisionNumber) }}" data-revision-number="{{ revisionNumber }}">{#<button class="revision" name="revisionNumber" value="{{ revisionNumber }}" title="{{ base.renderTitle(revision, revisionNumber, oldestRevisionNumber) }}">#}{{ revisionNumber }}{#</button>#}</th>
              {% endif %}
            {% endfor %}
          </tr>
        </thead>
        <tbody>
          {% for column in columns %}
            <tr>
              <th>{{ column }}</th>
              {% for revisionNumber, revision in revisions %}
                {% if revision.error %}
                  {{ base.renderErrorColumns(1) }}
                {% elseif revision != null and revisionNumber > oldestRevisionNumber and revisionNumber != 0 %}
                  <td class="bytes {{ revisionNumber }}{% if revisionNumber in visibleRevisions and visibleRevisions|length > 1 and revisionNumber == visibleRevisions[1] or visibleRevisions|length == 1 and revisionNumber == visibleRevisions[0] %} young{% elseif revisionNumber in visibleRevisions %} old{% endif %}" data-revision-number="{{ revisionNumber }}">{#<button name="revisionNumber" value="{{ revisionNumber }}" class="revision">#}
                  {% if revision.getRevisionData(column).getRevisionRevisionNumber() == revision.getRevisionNumber() %}
                    {{ _self.renderCell(revision, revisions[revisionNumber - 1], maxColumnSizes[column], column) }}
                  {% else %}
                    {{ _self.renderCell(revision, revision, maxColumnSizes[column], column) }}
                  {% endif %}
                  {#</button>#}</td>
                {% else %}
                  {% if revisionNumber != 0 %}
                    <td class="bytes {{ revisionNumber }}{% if revisionNumber in visibleRevisions %} visibleRevision{% endif %}" data-oldest-revision-number="{{ revisionNumber }}" class="missingRevisions" title="Show More Revisions">
                      {#<button name="oldestRevisionNumber" value="{{ revisionNumber }}" class="missingRevisions" title="Show More Revisions"></button>#}</td>
                  {% endif %}
                {% endif %}
              {% endfor %}
            </tr>
          {% endfor %}
        </tbody>
        <tfoot>
          <tr class="compare">
            <th>&nbsp;</th>
            {% for revisionNumber, revision in revisions %}
              {% if revision != null and revisionNumber > oldestRevisionNumber and not revision.error and revisionNumber != 0 %}
                <td class="{{ revisionNumber }}{% if revisionNumber in visibleRevisions %} {% if visibleRevisions|length > 1 and revisionNumber == visibleRevisions[1] or visibleRevisions|length == 1 and revisionNumber == visibleRevisions[0] %}young{% else %}old{% endif %}{% endif %}">
                  <label for="revisionNum-{{ revisionNumber }}">
                    <input id="revisionNum-{{ revisionNumber }}" type="checkbox" name="revisionNumbers[]" title="Revision {{ revisionNumber }}" class="compare" value="{{ revisionNumber }}"{% if revisionNumber in visibleRevisions and visibleRevisions|length >= 1 %} checked="checked"{% endif %}/>
                  </label>
                </td>
              {% elseif revisionNumber != 0 %}
                <td class="{{ revisionNumber }}"></td>
              {% endif %}
            {% endfor %}
          </tr>
        </tfoot>
      </table>
    </div>
  </div>
{% endmacro %}

{% macro renderCell(revision, previousRevision, maxColumnSize, column) %}
  {% if revision.getRevisionData(column).contentIsNumeric() %}
    {% set revisionContentSize = revision.getRevisionData(column).getContent() %}
  {% else %}
    {% set revisionContentSize = revision.getRevisionData(column).getContentSize() %}
  {% endif %}

  {% if revision.getRevisionData(column).getRevisionRevisionNumber() == revision.getRevisionNumber() %}
    {% if revision.getRevisionData(column).contentIsNumeric() %}
      {% set removedContentSize = previousRevision.getRevisionData(column).getContent() - revisionContentSize %}
      {% set addedContentSize = revisionContentSize - previousRevision.getRevisionData(column).getContent() %}
    {% else %}
      {% set removedContentSize = previousRevision.getRevisionData(column).getAddedContentSize() %}
      {% set addedContentSize = previousRevision.getRevisionData(column).getRemovedContentSize() %}
    {% endif %}
  {% else %}
    {% set removedContentSize = 0 %}
    {% set addedContentSize = 0 %}
  {% endif %}

  {% if revisionContentSize == 0 or maxColumnSize == 0 %}
    {% set addedPercentage = 0 %}
    {% set removedPercentage = 0 %}
  {% else %}
    {% set addedPercentage = addedContentSize / maxColumnSize * 100 %}
    {% set removedPercentage = removedContentSize / maxColumnSize * 100 %}
  {% endif %}

  {% if maxColumnSize == 0 %}
    {% set unchangedPercentage = 0 %}
  {% else %}
    {% set unchangedPercentage = revisionContentSize / maxColumnSize * 100 %}
  {% endif %}
  <span class="bytes container">
    <span class="bytes positive">
      {% if unchangedPercentage > 0 %}
        <span class="bytes unchanged" title="{{ _self.renderChangedTitle(revision.getRevisionData(column), revisionContentSize - addedContentSize, 'unchanged', removedContentSize) }}" style="height:{{ unchangedPercentage }}%;">
        </span>
      {% endif %}
      {% if addedPercentage > 0 %}
        <span class="bytes added" title="{{ _self.renderChangedTitle(revision.getRevisionData(column), addedContentSize, 'added', 0) }}" style="height:{{ addedPercentage }}%;">
        </span>
      {% endif %}
    </span>
    <span class="bytes negative">
      {% if removedPercentage > 0 %}
        <span class="bytes removed" title="{{ _self.renderChangedTitle(revision.getRevisionData(column), removedContentSize, 'removed', 0) }}" style="height:{{ removedPercentage }}%;">
        </span>
      {% endif %}
    </span>
  </span>
{% endmacro %}

{% macro renderChangedTitle(revisionData, number, label, removedContentSize) %}{% spaceless %}
    {% if revisionData.contentIsNumeric() %}
      {{ _self.renderNumericChangeLabel(label, number, removedContentSize) }}
    {% else %}
      {{ number }} Bytes {{ label }}
    {% endif %}
  {% endspaceless %}
{% endmacro %}

{% macro renderNumericChangeLabel(label, number, removedContentSize) %}{% spaceless %}
    {% if label == 'added' %}
      added {{ _self.workWithNumber(number) }}
    {% elseif label == 'removed' %}
      subtracted {{ _self.workWithNumber(number) }}
    {% elseif label == 'unchanged' %}
      {% if removedContentSize <= 0 %}
        {# avoids subtracting a negative number #}
        {% set removedContentSize = 0 %}
      {% endif %}
      {{ _self.workWithNumber(number - removedContentSize) }} unchanged
    {% endif %}
  {% endspaceless %}
{% endmacro %}

{% macro workWithNumber(number) %}{% spaceless %}
    {% if number < 0 %}
      0
    {% else %}
      {{ number }}
    {% endif %}
  {% endspaceless %}
{% endmacro %}