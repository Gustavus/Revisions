{% extends 'base.twig' %}
{% import 'base.twig' as base %}

{% block revisionTimeline %}
  {% if shouldRenderTimeline %}
    {{ _self.renderTimeline(revisions, maxColumnSizes, [], oldestRevisionNumber, limit) }}
  {% endif %}
{% endblock %}

{% block formExtras %}
{% endblock %}

{% macro renderTimeline(revisions, maxColumnSizes, visibleRevisions, oldestRevisionNumber, limit) %}
  <div id="revisionTimeline">
    <table class="fancy">
      <thead>
        <tr>
          <th>
            {% if oldestRevisionNumber > 0 %}
              {% if oldestRevisionNumber - limit + 1 < 0 %}{% set oldestRevNum = 1 %}{% else %}{% set oldestRevNum = oldestRevisionNumber - limit + 1 %}{% endif %}
              <button id="showMoreRevisions" name="oldestRevisionNumber" value="{{ oldestRevNum }}" class="small" title="Show Revision {{ oldestRevNum }} in table">Show More Revisions</button>
            {% endif %}
          </th>
          {% for revisionNumber, revision in revisions %}
            {% if revisionNumber != 0 %}
              <th class="{{ revisionNumber }}{% if revisionNumber in visibleRevisions %} {% if visibleRevisions|length > 1 and revisionNumber == visibleRevisions[1] or visibleRevisions|length == 1 and revisionNumber == visibleRevisions[0] %}young{% else %}old{% endif %}{% endif %}"><button class="revision" name="revisionNumber" value="{{ revisionNumber }}" title="Look at Revision {{ revisionNumber }}">{{ revisionNumber }}</button></th>
            {% endif %}
          {% endfor %}
        </tr>
      </thead>
      <tbody>
        {% set columns = revisions[revisions|length - 1].getRevisionData()|keys %}
        {% for column in columns %}
          <tr>
            <th>{{ column }}</th>
            {% for revisionNumber, revision in revisions %}
              {% if revision.error %}
                {% import 'base.twig' as base %}
                {{ base.renderErrorColumns(1) }}
              {% elseif revision != null and revisionNumber > oldestRevisionNumber and revisionNumber != 0 %}
                <td class="bytes {{ revisionNumber }}{% if revisionNumber in visibleRevisions and visibleRevisions|length > 1 and revisionNumber == visibleRevisions[1] or visibleRevisions|length == 1 and revisionNumber == visibleRevisions[0] %} young{% elseif revisionNumber in visibleRevisions %} old{% endif %}"><button name="revisionNumber" value="{{ revisionNumber }}" class="revision" title="Look at Revision {{ revisionNumber }}">
                {% if revision.getRevisionData(column).getRevisionRevisionNumber() == revision.getRevisionNumber() %}
                  {{ _self.renderCell(revision.getRevisionNumber(), revisions[revisionNumber - 1].getRevisionData(column).getRevisionContentSize(), revision.getRevisionData(column).getRevisionContentSize(), maxColumnSizes[column], revisions[revisionNumber - 1].getRevisionData(column).getAddedContentSize(), revisions[revisionNumber - 1].getRevisionData(column).getRemovedContentSize()) }}
                {% else %}
                  {{ _self.renderCell(revision.getRevisionNumber(), revisions[revisionNumber - 1].getRevisionData(column).getRevisionContentSize(), revision.getRevisionData(column).getRevisionContentSize(), maxColumnSizes[column], 0, 0) }}
                {% endif %}
                </button></td>
              {% else %}
                {% if revisionNumber != 0 %}
                  <td class="bytes {{ revisionNumber }}{% if revisionNumber in visibleRevisions %} visibleRevision{% endif %}">
                    <button name="oldestRevisionNumber" value="{{ revisionNumber }}" class="missingRevisions" title="Show Revision {{ revisionNumber }} in table"></button></td>
                {% endif %}
              {% endif %}
            {% endfor %}
          </tr>
        {% endfor %}
      </tbody>
      <tfoot>
        <tr class="compare">
          <th><button id="compareButton" class="positive" name="revisionNumber" value="false">Compare</button></th>
          {% for revisionNumber, revision in revisions %}
            {% if revision != null and revisionNumber > oldestRevisionNumber and not revision.error and revisionNumber != 0 %}
              <td class="{{ revisionNumber }}{% if revisionNumber in visibleRevisions %} {% if visibleRevisions|length > 1 and revisionNumber == visibleRevisions[1] or visibleRevisions|length == 1 and revisionNumber == visibleRevisions[0] %}young{% else %}old{% endif %}{% endif %}">
                <label for="revisionNum-{{ revisionNumber }}">
                  <input id="revisionNum-{{ revisionNumber }}" type="checkbox" name="revisionNumbers[]" title="Revision {{ revisionNumber }}" class="compare" value="{{ revisionNumber }}"{% if revisionNumber in visibleRevisions and visibleRevisions|length > 1 %} checked="checked"{% endif %}/>
                </label>
              </td>
            {% elseif revisionNumber != 0 %}
              <td class="{{ revisionNumber }}"></td>
            {% endif %}
          {% endfor %}
        </tr>
      </tfoot>
    </table>
  </div>
{% endmacro %}

{% macro renderCell(revisionNumber, currentContentSize, revisionContentSize, maxColumnSize, removedContentSize, addedContentSize) %}

  {% if revisionContentSize == 0 %}
    {% set addedPercentage = 0 %}
  {% else %}
    {% set addedPercentage = addedContentSize / maxColumnSize * 100 %}
  {% endif %}

  {% if revisionContentSize == 0 %}
    {% if currentContentSize == 0 %}
      {% set removedPercentage = 0 %}
    {% else %}
      {% set removedPercentage = removedContentSize/currentContentSize*100 %}
    {% endif %}
  {% else %}
    {% set removedPercentage = removedContentSize/revisionContentSize*100 %}
  {% endif %}

  {% if maxColumnSize == 0 %}
    {% set unchangedPercentage = 0 %}
  {% else %}
    {% set unchangedPercentage = revisionContentSize/maxColumnSize*100 %}
  {% endif %}
  <span class="bytes container">
    <span class="bytes positive">
      <span class="bytes unchanged" title="{{ revisionContentSize - addedContentSize }} Bytes unchanged" style="height:{{ unchangedPercentage }}%;">
      </span>
      <span class="bytes added" title="{{ addedContentSize }} Bytes added" style="height:{{ addedPercentage }}%;">
      </span>
    </span>
    <span class="bytes negative">
      <span class="bytes removed" title="{{ removedContentSize }} Bytes removed" style="height:{{ removedPercentage }}%;">
      </span>
    </span>
  </span>
{% endmacro %}